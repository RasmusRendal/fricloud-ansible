- name: Create config file
  template:
    src: prometheus.yml
    dest: /etc/prometheus.yml
- name: Create prometheus docker
  docker_container:
    name: "prometheus"
    image: "prom/prometheus"
    state: started
    restart: yes
    volumes:
      - /etc/prometheus.yml:/etc/prometheus/prometheus.yml
    published_ports:
      "0.0.0.0:{{ prometheus_port }}:9090"
- name: Create grafana directory
  file:
    path: /var/grafana
    state: directory
    mode: '0755'
    owner: "472"
    group: "472"
- name: Create grafana docker
  docker_container:
    name: "grafana"
    image: "grafana/grafana"
    state: started
    restart: yes
    published_ports:
      "0.0.0.0:{{grafana_port}}:3000"
    volumes:
      "{{grafana_vol_path}}:/var/lib/grafana"
    env:
      GF_SECURITY_ADMIN_PASSWORD: "{{ grafana_password }}"
- name: Install prometheus node exporter
  apt: pkg=prometheus-node-exporter state=present update_cache=true
- name: Create service for prometheus node exporter
  template:
    src: node-service.service
    dest: /etc/systemd/system/node-exporter.service
- name: Start prometheus node exporter service
  systemd:
    name: node-exporter
    daemon_reexec: yes
    enabled: yes
    state: started
- name: Wait for grafana to be up
  shell: "/usr/bin/curl localhost:{{ grafana_port }}"
  register: result
  retries: 20
  delay: 3
  until: result.rc == 0
- name: Set up prometheus as a data source
  grafana_datasource:
    name: "Prometheus"
    grafana_url: "http://127.0.0.1:{{grafana_port}}"
    grafana_user: "admin"
    grafana_password: "{{ grafana_password }}"
    ds_type: "prometheus"
    url: "http://{{ docker_host }}:{{prometheus_port}}"
    state: present
- name: Copy dashboard to host
  template:
    src: dashboard.yml
    dest: /tmp/dashboard.yml
- name: Install the main grafana dashboard
  grafana_dashboard:
    grafana_url: "http://127.0.0.1:{{grafana_port}}"
    grafana_user: "admin"
    grafana_password: "{{ grafana_password }}"
    path: "/tmp/dashboard.yml"
    overwrite: yes
    message: "Initial import of dashboard"
  ignore_errors: yes
- name: Delete dashboard again
  file:
    path: "/tmp/dashboard.yml"
    state: absent
