- name: Hash ldap password
  shell: "openssl passwd -6 {{ lookup('password', '{{ passwords_dir }}grafana_ldap_password') }}"
  register: ldap_password
- name: Create ldap grafana user
  ldap_entry:
    dn: "cn=grafana-read,dc={{ dc_domain }},dc={{ dc_domain_top }}"
    objectClass:
      - simpleSecurityObject
      - organizationalRole
    attributes:
      cn: grafana-read
      userPassword: "{crypt}{{ ldap_password.stdout }}"
    bind_dn: "cn=admin,dc={{ dc_domain }},dc={{ dc_domain_top }}"
    bind_pw: "{{ domain_admin_pass }}"
- name: Ensure ldap password
  ldap_attr:
    dn: "cn=grafana-read,dc={{ dc_domain }},dc={{ dc_domain_top }}"
    name: userPassword
    values: "{crypt}{{ ldap_password.stdout }}"
    state: exact
    bind_dn: "cn=admin,dc={{ dc_domain }},dc={{ dc_domain_top }}"
    bind_pw: "{{ domain_admin_pass }}"
- name: Create config file
  template:
    src: prometheus.yml
    dest: /etc/prometheus.yml
- name: Create prometheus docker
  docker_container:
    name: "prometheus"
    image: "prom/prometheus"
    state: started
    restart: yes
    restart_policy: "{{ docker_restart_policy }}"
    volumes:
      - /etc/prometheus.yml:/etc/prometheus/prometheus.yml
    published_ports:
      "{{ docker_host }}:{{ prometheus_port }}:9090"
- name: Create grafana data directory
  file:
    path: "{{ grafana_vol_path }}/data"
    state: directory
    mode: '0700'
    owner: "472"
    group: "472"
- name: Create grafana conf directory
  file:
    path: "{{ grafana_vol_path }}/conf"
    state: directory
    mode: '0700'
    owner: "472"
    group: "472"
- name: Send config
  template:
    src: "{{ item }}"
    dest: "{{ grafana_vol_path }}/conf/{{ item | basename }}"
  with_fileglob: "../templates/conf/*"
- name: Create dashboards directory
  file:
    path: "{{ grafana_vol_path }}/data/dashboards"
    state: directory
    mode: '0700'
    owner: "472"
    group: "472"
- name: Copy dashboards
  template:
    src: "{{ item }}"
    dest: "{{ grafana_vol_path }}/data/dashboards/{{ item | basename }}"
  with_fileglob: "../templates/dashboards/*"
- name: Create provisioning directory
  file:
    path: "{{ grafana_vol_path }}/conf/provisioning"
    state: directory
    mode: '0700'
    owner: "472"
    group: "472"
- name: Create datasources directory
  file:
    path: "{{ grafana_vol_path }}/conf/provisioning/datasources"
    state: directory
    mode: '0700'
    owner: "472"
    group: "472"
- name: Send config
  template:
    src: "conf/provisioning/datasources/prometheus.yaml"
    dest: "{{ grafana_vol_path }}/conf/provisioning/datasources/prometheus.yaml"
- name: Create dashboards directory
  file:
    path: "{{ grafana_vol_path }}/conf/provisioning/dashboards"
    state: directory
    mode: '0700'
    owner: "472"
    group: "472"
- name: Send config
  template:
    src: "conf/provisioning/dashboards/dashboards.yaml"
    dest: "{{ grafana_vol_path }}/conf/provisioning/dashboards/dashboards.yaml"

- name: Create grafana docker
  docker_container:
    name: "grafana"
    image: "grafana/grafana"
    state: started
    restart: yes
    restart_policy: "{{ docker_restart_policy }}"
    published_ports:
      "{{ docker_host }}:{{grafana_port}}:3000"
    volumes:
      - "{{grafana_vol_path}}/data:/var/lib/grafana"
      - "{{grafana_vol_path}}/conf:/etc/grafana"
    env:
      GF_SECURITY_ADMIN_PASSWORD: "{{ lookup('password', '{{ passwords_dir }}grafana_password') }}"
- name: Install prometheus node exporter
  apt: pkg=prometheus-node-exporter state=present update_cache=true
- name: Create service for prometheus node exporter
  template:
    src: node-service.service
    dest: /etc/systemd/system/node-exporter.service
- name: Start prometheus node exporter service
  systemd:
    name: node-exporter
    daemon_reexec: yes
    enabled: yes
    state: started
