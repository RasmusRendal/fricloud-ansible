- name: Hash ldap password
  shell: "openssl passwd -6 {{ lookup('password', '{{ passwords_dir }}gitea_ldap_pass') }}"
  register: ldap_password

- name: Create ldap admin user
  ldap_entry:
      dn: cn=gitea-read,dc={{dc_domain}},dc={{dc_domain_top}}
      objectClass:
          - simpleSecurityObject
          - organizationalRole
      attributes:
          cn: gitea-read
          userPassword: "{crypt}{{ ldap_password.stdout }}"
      bind_dn: "cn=admin,dc={{dc_domain}},dc={{dc_domain_top}}"
      bind_pw: "{{lookup('password', '{{ passwords_dir }}ldap_domain_password')}}"
- name: Ensure ldap password is correct
  ldap_attr:
    dn: "cn=gitea-read,dc={{ dc_domain }},dc={{ dc_domain_top }}"
    name: userPassword
    values: "{crypt}{{ ldap_password.stdout }}"
    state: exact
    bind_dn: "cn=admin,dc={{ dc_domain }},dc={{ dc_domain_top }}"
    bind_pw: "{{lookup('password', '{{ passwords_dir }}ldap_domain_password')}}"

- name: Create db user
  postgresql_user:
      name: gitea
      password: "{{ lookup('password', '{{ passwords_dir }}gitea_db_pass') }}"
      login_host: "{{ docker_host }}"
      login_password: "{{lookup('password', '{{ passwords_dir }}postgresql_password')}}"
- name: Create db
  postgresql_db:
      name: gitea_db
      encoding: UTF-8
      owner: gitea
      login_host: "{{ docker_host }}"
      login_password: "{{lookup('password', '{{ passwords_dir }}postgresql_password')}}"
- name: Create data dir
  file:
      path: "{{ gitea_data_path }}"
      state: directory

- name: Create conf dir
  file:
    path: /root/gitea-data/gitea/conf
    state: directory
- name: Send template
  template:
    src: "app.ini"
    dest: "{{ gitea_data_path }}/gitea/conf/app.ini"

- name: Run gitea docker
  docker_container:
      name: "gitea-docker"
      image: gitea/gitea:1
      state: started
      restart_policy: "{{ docker_restart_policy }}"
      pull: "{{ docker_pull }}"
      published_ports:
          - "{{ docker_host }}:{{ gitea_http_port }}:3000"
          - "{{ gitea_ssh_port }}:22"
      env:
          USER_UID: "1000"
          USER_GID: "1000"
          DB_TYPE: "postgres"
          DB_HOST: "{{ docker_host }}:5432"
          DB_NAME: "gitea_db"
          DB_USER: "gitea"
          DB_PASSWD: "{{ lookup('password', '{{ passwords_dir }}gitea_db_pass') }}"
          SSH_DOMAIN: "{{ gitea_ssh_domain }}"
          SSH_PORT: "22"
          ROOT_URL: "{{ gitea_domain }}"
          APP_NAME: "Fricloud gitea"
      volumes:
          - "{{ gitea_data_path }}:/data:rw"

- name: Wait for gitea to be up
  shell: "/usr/bin/curl http://{{ docker_host }}:{{ gitea_http_port }}/install"
  register: result
  retries: 20
  delay: 3
  until: result.rc == 0

- name: Check that gitea is installed
  lineinfile:
    path: "/root/gitea-data/gitea/conf/app.ini"
    line: "RUN_USER = git"
    state: present
  check_mode: yes
  register: gitea_installed

- name: Get csrf cookies
  uri:
    url: "http://localhost:{{ gitea_http_port }}/install"
    method: GET
    return_content: yes
  register: cookies
  when: gitea_installed is changed


- name: Install gitea
  uri:
    url: "http://localhost:{{ gitea_http_port }}/install"
    method: POST
    body:
      db_type: "PostgreSQL"
      db_host: "{{ docker_host}}:{{ postgresql_port}}"
      db_user: gitea
      db_passwd: "{{ lookup('password', '{{ passwords_dir }}gitea_db_pass') }}"
      db_name: gitea_db
      ssl_mode: disable
      charset: utf8
      db_path: ""
      app_name: "{{ gitea_app_name }}"
      repo_root_path: /data/git/repositories
      lfs_root_path: /data/git/lfs
      run_user: git
      domain: localhost
      ssh_port: "{{ gitea_ssh_port }}"
      http_port: "3000"
      app_url: "{{ gitea_domain }}"
      log_root_path: /data/gitea/log
      smtp_host: ""
      smtp_from: ""
      smtp_user: ""
      smtp_passwd: ""
      enable_federated_avatar: on
      enable_open_id_sign_in: on
      enable_open_id_sign_up: on
      default_allow_create_organization: on
      default_enable_timetracking: on
      no_reply_address: "noreply@{{ full_domain }}"
      admin_name: "{{ gitea_admin_name }}"
      admin_passwd: "{{ lookup('password', '{{ passwords_dir }}gitea_admin_password') }}"
      admin_confirm_passwd: "{{ lookup('password', '{{ passwords_dir }}gitea_admin_password') }}"
      admin_email: "{{ gitea_admin_name }}@{{ full_domain }}"
    body_format: form-urlencoded
    follow_redirects: yes
    return_content: yes
    headers:
      Cookie: "{{ cookies.set_cookie }}"
  ignore_errors: yes
  when: gitea_installed is changed

- name: Check if login-source exists
  postgresql_query:
      db: gitea_db
      login_host: "{{ docker_host }}"
      login_user: gitea
      login_password: "{{ lookup('password', '{{ passwords_dir }}gitea_db_pass') }}"
      query: SELECT id FROM login_source WHERE name = '{{ dc_domain }}'
  register: login_source_exists

- debug:
    var: login_source_exists

- name: Add login source
  when: login_source_exists.rowcount == 0
  postgresql_query:
      db: gitea_db
      login_host: "{{ docker_host }}"
      login_user: gitea
      login_password: "{{ lookup('password', '{{ passwords_dir }}gitea_db_pass') }}"
      query: >-
          INSERT INTO login_source ( type, name, is_actived, is_sync_enabled, created_unix, updated_unix, cfg) VALUES
          (2, '{{ dc_domain }}', True, True, 0, 0,
          '{"Name":"{{ dc_domain }}",
              "Host":"{{ docker_host }}",
              "Port":389,
              "SecurityProtocol":0,
              "SkipVerify":false,
              "BindDN":"cn=gitea-read,dc={{dc_domain}},dc={{dc_domain_top}}",
              "BindPassword":"{{ lookup("password", "{{ passwords_dir }}gitea_ldap_pass") }}",
              "UserBase":"ou=users,dc={{dc_domain}},dc={{dc_domain_top}}",
              "UserDN":"",
              "AttributeUsername":"uid",
              "AttributeName":"sn",
              "AttributeSurname":"",
              "AttributeMail":"mail",
              "AttributesInBind":false,
              "AttributeSSHPublicKey":"",
              "SearchPageSize":0,
              "Filter":"(\u0026(uid=%s)(objectClass=person))",
              "AdminFilter":"(memberof=cn=admin,ou=groups,dc={{dc_domain}},dc={{dc_domain_top}})",
              "Enabled":true}')

- name: Add login source
  when: login_source_exists.rowcount > 0
  postgresql_query:
      db: gitea_db
      login_host: "{{ docker_host }}"
      login_user: gitea
      login_password: "{{ lookup('password', '{{ passwords_dir }}gitea_db_pass') }}"
      query: >-
          UPDATE login_source SET cfg = '{"Name":"{{ dc_domain }}",
              "Host":"{{ docker_host }}",
              "Port":389,
              "SecurityProtocol":0,
              "SkipVerify":false,
              "BindDN":"cn=gitea-read,dc={{dc_domain}},dc={{dc_domain_top}}",
              "BindPassword":"{{ lookup("password", "{{ passwords_dir }}gitea_ldap_pass") }}",
              "UserBase":"ou=users,dc={{dc_domain}},dc={{dc_domain_top}}",
              "UserDN":"",
              "AttributeUsername":"uid",
              "AttributeName":"sn",
              "AttributeSurname":"",
              "AttributeMail":"mail",
              "AttributesInBind":false,
              "AttributeSSHPublicKey":"",
              "SearchPageSize":0,
              "Filter":"(\u0026(uid=%s)(objectClass=person))",
              "AdminFilter":"(memberof=cn=admin,ou=groups,dc={{dc_domain}},dc={{dc_domain_top}})",
              "Enabled":true}' WHERE name = '{{ dc_domain }}'
