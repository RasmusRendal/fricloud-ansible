- name: Hash ldap password
  shell: "openssl passwd -6 {{ lookup('password', '{{ passwords_dir }}nextcloud_ldap_password') }}"
  register: ldap_password

- name: Create ldap nextcloud user
  ldap_entry:
    dn: cn=nextcloud-read,dc={{ dc_domain }},dc={{ dc_domain_top }}
    objectClass:
      - simpleSecurityObject
      - organizationalRole
    attributes:
      cn: nextcloud-read
      userPassword: "{crypt}{{ ldap_password.stdout }}"
    bind_dn: "cn=admin,dc={{ dc_domain }},dc={{ dc_domain_top }}"
    bind_pw: "{{ domain_admin_pass }}"
- name: Ensure ldap password is correct
  ldap_attr:
    dn: "cn=nextcloud-read,dc={{ dc_domain }},dc={{ dc_domain_top }}"
    name: userPassword
    values: "{crypt}{{ ldap_password.stdout }}"
    state: exact
    bind_dn: "cn=admin,dc={{ dc_domain }},dc={{ dc_domain_top }}"
    bind_pw: "{{ domain_admin_pass }}"

- name: Create database user
  postgresql_user:
    name: nextcloud
    password: "{{ lookup('password', '{{ passwords_dir }}nextcloud_db_password') }}"
    login_host: "{{ docker_host }}"
    login_password: "{{ postgresql_password }}"
- name: Create database
  postgresql_db:
    name: nextcloud
    encoding: UTF-8
    owner: nextcloud
    login_host: "{{ docker_host }}"
    login_password: "{{ postgresql_password }}"
- name: Create nextcloud docker
  docker_container:
    name: "nextcloud"
    image: "nextcloud"
    state: started
    restart: yes
    published_ports:
      "{{ docker_host }}:{{ nextcloud_port }}:80"
    volumes:
      - /var/nextcloud:/var/www/html
    env:
      POSTGRES_DB: nextcloud
      POSTGRES_USER: nextcloud
      POSTGRES_PASSWORD: "{{ lookup('password', '{{ passwords_dir }}nextcloud_db_password') }}"
      POSTGRES_HOST: "{{ docker_host }}"
      #NEXTCLOUD_ADMIN_USER: "admin"
      #NEXTCLOUD_ADMIN_PASSWORD: "{{ nextcloud_admin_password }}"
# The environment variables do not work, so a command is necessary. Luckily, it does only set the admin password if docker is not yet initialized
- name: Wait for nextcloud docker to start
  wait_for:
    host: "{{ docker_host }}"
    port: "{{nextcloud_port}}"
    delay: 5

- name: Check if nextcloud is installed
  shell: "docker exec --user www-data nextcloud php occ status"
  register: installed

- name: Install nextcloud
  shell: "docker exec --user www-data nextcloud php occ maintenance:install --admin-user admin --admin-pass {{ lookup('password', '{{ passwords_dir }}nextcloud_admin_password') }}"
  when: '"false" in installed.stdout'
- name: Get RMS book
  get_url:
    url: https://www.gnu.org/philosophy/fsfs/rms-essays.pdf
    dest: /var/nextcloud/core/skeleton/
- name: Add trusted domain
  shell: "docker exec --user www-data nextcloud php occ config:system:set trusted_domains 0 --value=nextcloud.{{ full_domain }}"
- name: Set domain
  shell: "docker exec --user www-data nextcloud php occ config:system:set overwrite.cli.url --value \"https://nextcloud.{{ full_domain }}\""
- name: Setup ldap
  import_tasks: "{{ role_path }}/tasks/ldap.yml"
