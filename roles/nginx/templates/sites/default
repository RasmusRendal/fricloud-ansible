server {
	listen 80 ;
	listen [::]:80 ;
	server_name *.{{ full_domain }};

# redirect to https
	return 301 https://$host$request_uri;
}

server {
	listen 80 ;
	listen [::]:80 ;
	server_name {{ full_domain }};

	location /.well_known {
		proxy_pass http://{{docker_host}}:{{website_port}};
	}

# redirect to https
	return 301 https://$host$request_uri;
}

server {
	listen [::]:443 ssl;
	listen 443 ssl;
	server_name {{ full_domain }};

	ssl_certificate {{ nginx_cert }};
	ssl_certificate_key {{ nginx_cert_key }};
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:20m;
        ssl_session_timeout 180m;
  
        # Only strong ciphers in PFS mode
        # Detail at https://github.com/ioerror/duraconf or https://www.eff.org/https-everywhere/deploying-https
        ssl_ciphers ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-DSS-AES256-SHA:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  
        # add HSTS, 31536000 == 1 year
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
  
        # Disallow embedding in eg. iframes
        add_header X-Frame-Options DENY;
  
	location / {
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $remote_addr;
		proxy_pass http://{{ docker_host }}:{{ website_port}};
	}

	location /_matrix/identity {
		proxy_set_header Host $host;
		proxy_set_header X-Forwarded-For $remote_addr;
		proxy_pass http://{{ docker_host }}:8090/_matrix/identity;
	}

	location /_matrix {
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
		proxy_pass http://{{ docker_host }}:8008$request_uri;
	}


}
